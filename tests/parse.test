# parse.test - Copyright (C) 2001 Pat Thoyts <Pat.Thoyts@bigfoot.com>
#
# Provide a set of tests to excercise the SOAP::Parse package.
#
# @(#)$Id$

# Initialize the required packages

if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest
    namespace import ::tcltest::*
    #source [file join [pwd] [file dirname [info script]] defs.tcl]
}

if {[catch {package require SOAP::Parse}]} {
    catch {puts stderr "Cannot load the SOAP::Parse package"}
    return
}

namespace import -force SOAP::Parse::parse

# -------------------------------------------------------------------------

test parse-1.1 {Parse single element} {
    catch {parse {<a>A</a>}} result
    set result
} {A}

test parse-1.2 {Parse single spaced element} {
    catch {parse {<a>A A</a>}} result
    set result
} {A A}

test parse-2.1 {Parse multiple elements} {
    catch {parse {<a><b>B</b><c>C</c></a>}} result
    set result
} {B C}

test parse-2.2 {Parse multiple spaced elements} {
    catch {parse {<a><b>B B</b><c>C C</c></a>}} result
    set result
} {{B B} {C C}}

test parse-2.3 {Parse multiple elements, check the order} {
    catch {parse {<E><B><F><a>code</a><b>string</b></F></B></E>}} result
    set result
} {code string}

test parse-2.4 {Parse SOAP array style} {
    catch {parse {<a><b>B1</b><b>B2</b><b>B3</b></a>}} result
    set result
} {B1 B2 B3}

test parse-3.1 {Parse simple CDATA element} {
    catch {parse {<a><![CDATA[cdata]]></a>}} result
    set result
} {cdata}

test parse-3.2 {Parse XML CDATA element} {
    catch {parse {<a><![CDATA[<a>A</a>]]></a>}} result
    set result
} {<a>A</a>}

test parse-3.3 {Parse nasty CDATA element} {
    catch {parse "<a><!\[CDATA\[\{ #\]\]></a>"} result
    set result
} "\\\{ \#"

test parse-4.1 {Parse XML quoted entities} {
    catch {parse {<a>&quot;quoted&quot;</a>}} result
    set result
} {"quoted"}

test parse-4.2 {Parse XML quoted entities} {
    catch {parse {<a>&lt;a&gt;</a>}} result
    set result
} {<a>}

# -------------------------------------------------------------------------

# Clean up the tests

::tcltest::cleanupTests
return

# Local variables:
#    mode: tcl
#    indent-tabs-mode: nil
# End:

